version: "3.3"
services:
  ##############################################################
  # create a cluster with 3 etcd instances                     
  ##############################################################
  yumd-etcd1:
    image: quay.io/coreos/etcd
    container_name: yumd-etcd1
    volumes:
      - etcd1-data:/etcd-data
    expose:
      - 2379
      - 2380      
    networks:
      dev_net:
        ipv4_address: 10.20.10.10
    environment:
      - ETCDCTL_API=3
    command:
      - /usr/local/bin/etcd
      - --data-dir=/etcd-data
      - --name
      - etcd1
      - --initial-advertise-peer-urls
      - http://10.20.10.10:2380
      - --listen-peer-urls
      - http://0.0.0.0:2380
      - --advertise-client-urls
      - http://10.20.10.10:2379
      - --listen-client-urls
      - http://0.0.0.0:2379
      - --initial-cluster
      - etcd1=http://10.20.10.10:2380,etcd2=http://10.20.10.11:2380,etcd3=http://10.20.10.12:2380
      - --initial-cluster-state
      - new
      - --initial-cluster-token
      - docker-etcd

  yumd-etcd2:
    image: quay.io/coreos/etcd
    container_name: yumd-etcd2
    volumes:
      - etcd2-data:/etcd-data
    networks:
      dev_net:
        ipv4_address: 10.20.10.11
    environment:
      - ETCDCTL_API=3
    expose:
      - 2379
      - 2380
    command:
      - /usr/local/bin/etcd
      - --data-dir=/etcd-data
      - --name
      - etcd2
      - --initial-advertise-peer-urls
      - http://10.20.10.11:2380
      - --listen-peer-urls
      - http://0.0.0.0:2380
      - --advertise-client-urls
      - http://10.20.10.11:2379
      - --listen-client-urls
      - http://0.0.0.0:2379
      - --initial-cluster
      - etcd1=http://10.20.10.10:2380,etcd2=http://10.20.10.11:2380,etcd3=http://10.20.10.12:2380
      - --initial-cluster-state
      - new
      - --initial-cluster-token
      - docker-etcd

  yumd-etcd3:
    image: quay.io/coreos/etcd
    container_name: yumd-etcd3
    volumes:
      - etcd3-data:/etcd-data
    networks:
      dev_net:
        ipv4_address: 10.20.10.12
    environment:
      - ETCDCTL_API=3
    expose:
      - 2379
      - 2380
    command:
      - /usr/local/bin/etcd
      - --data-dir=/etcd-data
      - --name
      - etcd3
      - --initial-advertise-peer-urls
      - http://10.20.10.12:2380
      - --listen-peer-urls
      - http://0.0.0.0:2380
      - --advertise-client-urls
      - http://10.20.10.12:2379
      - --listen-client-urls
      - http://0.0.0.0:2379
      - --initial-cluster
      - etcd1=http://10.20.10.10:2380,etcd2=http://10.20.10.11:2380,etcd3=http://10.20.10.12:2380
      - --initial-cluster-state
      - new
      - --initial-cluster-token
      - docker-etcd
  ##############################################################
  # create a galera cluster with 3 mysql instances                     
  ##############################################################
  yumd-mysql-mgm1:
    image: mysql/mysql-cluster
    container_name: yumd-mysql-mgm1
    volumes:
      - $PWD/my.cnf:/etc/my.cnf    
      - $PWD/mysql-cluster.cnf:/etc/mysql-cluster.cnf   
    networks:
      dev_net:
        ipv4_address: 10.20.30.10 
    command:
      - ndb_mgmd

  yumd-mysql-ndb1:
    image: mysql/mysql-cluster
    container_name: yumd-mysql-ndb1
    volumes:
      - $PWD/my.cnf:/etc/my.cnf    
      - $PWD/mysql-cluster.cnf:/etc/mysql-cluster.cnf 
    networks:
      dev_net:
        ipv4_address: 10.20.30.50
    command:
      - ndbd

  yumd-mysql-ndb2:
    image: mysql/mysql-cluster
    container_name: yumd-mysql-ndb2
    volumes:
      - $PWD/my.cnf:/etc/my.cnf    
      - $PWD/mysql-cluster.cnf:/etc/mysql-cluster.cnf 
    networks:
      dev_net:
        ipv4_address: 10.20.30.51
    command:
      - ndbd

  yumd-mysql-srv1:
    image: mysql/mysql-cluster
    container_name: yumd-mysql-srv1
    volumes:
      - $PWD/my.cnf:/etc/my.cnf    
      - $PWD/mysql-cluster.cnf:/etc/mysql-cluster.cnf 
    networks:
      dev_net:
        ipv4_address: 10.20.30.100
    environment:
    - MYSQL_ROOT_PASSWORD=root
    command:
      - mysqld

  yumd-mysql-srv2:
    image: mysql/mysql-cluster
    container_name: yumd-mysql-srv2
    volumes:
      - $PWD/my.cnf:/etc/my.cnf    
      - $PWD/mysql-cluster.cnf:/etc/mysql-cluster.cnf 
    networks:
      dev_net:
        ipv4_address: 10.20.30.101
    environment:
     - MYSQL_ROOT_PASSWORD=root
    command:
      - mysqld
  ##############################################################
  # create a cluster with 3 redis instances                     
  ##############################################################
  yumd-redis1:
    image: redis   
    container_name: yumd-redis1
    volumes:
      - ./redis.conf:/data/redis.conf
    networks:
     - dev_net
    command: redis-server /data/redis.conf
    networks:
      dev_net:
        ipv4_address: 10.20.20.10

  yumd-redis2:
    image: redis   
    container_name: yumd-redis2
    volumes:
      - ./redis.conf:/data/redis.conf
    networks:
     - dev_net
    command: redis-server /data/redis.conf
    networks:
      dev_net:
        ipv4_address: 10.20.20.11

  yumd-redis3:
    image: redis   
    container_name: yumd-redis3
    volumes:
      - ./redis.conf:/data/redis.conf
    networks:
     - dev_net
    command: redis-server /data/redis.conf
    networks:
      dev_net:
        ipv4_address: 10.20.20.12

  yumd-redis4:
    image: redis   
    container_name: yumd-redis4
    volumes:
      - ./redis.conf:/data/redis.conf
    networks:
     - dev_net
    command: redis-server /data/redis.conf
    networks:
      dev_net:
        ipv4_address: 10.20.20.13
  
  yumd-redis5:
    image: redis   
    container_name: yumd-redis5
    volumes:
      - ./redis.conf:/data/redis.conf
    networks:
     - dev_net
    command: redis-server /data/redis.conf
    networks:
      dev_net:
        ipv4_address: 10.20.20.14

  yumd-redis6:
    image: redis   
    container_name: yumd-redis6
    volumes:
      - ./redis.conf:/data/redis.conf
    networks:
     - dev_net
    command: redis-server /data/redis.conf
    networks:
      dev_net:
        ipv4_address: 10.20.20.15


  yumd-redis-cluster-creator:
    image: ruby   
    container_name: yumd-redis-cluster-creator
    volumes:
      - $PWD/redis-trib.rb:/home/redis-trib.rb
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dev_net
    command: |
      sh -c " gem install redis && (echo 'yes' | ruby /home/redis-trib.rb create --replicas 1 10.20.20.10:7000 10.20.20.11:7000 10.20.20.12:7000 10.20.20.13:7000 10.20.20.14:7000 10.20.20.15:7000)"
    depends_on:
      - yumd-redis1
      - yumd-redis2
      - yumd-redis3
      - yumd-redis4
      - yumd-redis5
      - yumd-redis6

volumes:
  etcd1-data:
  etcd2-data:
  etcd3-data:

networks:
  dev_net:
    driver: bridge
    ipam:
      driver: default
      config:
      -
        subnet: 10.20.0.0/16
